########################
# InstalaÃ§Ã£o de pacotes
pacotes <- c(
  
  'rpart',      # Biblioteca de Ã¡rvores
  'rpart.plot', # Conjunto com Rpart, plota a parvore
  'gtools',     # funÃ§Ãµes auxiliares como quantcut,
  'Rmisc',      # carrega a funÃ§Ã£o sumarySE para a descritiva
  'scales',     # importa paletas de cores
  'viridis',    # Escalas 'viridis' para o ggplot2
  'caret',       # FunÃ§Ãµes Ãºteis para machine learning
  'AMR',
  'randomForest',
  'fastDummies',
  'rattle',
  'qdap',
  'xgboost',
  'cluster',#algoritmo de cluster
  'factoextra',#algoritmo de cluster e visualizacao
  'fpc',#algoritmo de cluster e visualizacao
  'gridExtra',##para a funcao grid arrange
  'readxl',
  'qdap', "CVXR",
  'ompr','ompr.roi',
  'neuralnet',"plotly","tidyverse","reshape2","knitr","kableExtra","rgl","car",
  "nlme","lmtest","fastDummies","msm","lmeInfo","jtools","ROSE","e1071","ranger","LiblineaR",
  "httr", "jsonlite","fmsb","dbscan","NbClust"
  
  
)

if(sum(as.numeric(!pacotes %in% installed.packages())) != 0){
  instalador <- pacotes[!pacotes %in% installed.packages()]
  for(i in 1:length(instalador)) {
    install.packages(instalador, dependencies = T)
    break()}
  sapply(pacotes, require, character = T) 
} else {
  sapply(pacotes, require, character = T) 
}
#########

stat1<-read_xlsx("C:/Users/MorellGL/OneDrive - BASF/Documents/TCC/TCC.xlsx",
                 sheet = "Stat1")
stat2<-read_xlsx("C:/Users/MorellGL/OneDrive - BASF/Documents/TCC/TCC.xlsx",
                 sheet =  "Stat2")
stat3<-read_xlsx("C:/Users/MorellGL/OneDrive - BASF/Documents/TCC/TCC.xlsx",
                 sheet =  "Stat3")


stats<-cbind(stat1,stat2[,-(1:6)],stat3[,-(1:7)])
###Ajustando nome do jogador

stats$Player<-word(stats$Player,1,sep = "\\.")
stats$Player_Team<-paste(stats$Player,"|",stats$Squad,"|",stats$Rk )
## Ajustando minutos jogados pra ficar numa escala mais adequada, dividindo por 90

stats.model<-stats
rownames(stats.model)<-stats.model$Player_Team
#Relativizando as estatísticas por partidas jogadas

#EDA
# Historgram for each attribute
 
stats.porjogo<-stats
i=0
for (i in 8:(ncol(stats)-1)){
  stats.porjogo[,i]<-round(stats[,i]/stats$MP,2)
}
stats.porjogo<-stats.porjogo%>%filter(Pos !="GK")%>%
  select(c(6:27))

rownames(stats.porjogo)<-stats.porjogo$Player_Team
stats.porjogo%>% 
  gather(Attributes, value, 1:21) %>% 
  ggplot(aes(x=value)) +
  geom_histogram(fill = "lightblue2", color = "black") + 
  facet_wrap(~Attributes, scales = "free_x") +
  labs(x = "Value", y = "Frequency")


stats.porjogo1<-stats.porjogo%>%select(-c("Player_Team","PK","G_PK",
                                          "PKatt","2CrdY","MP","OG","CrdR"))
#Classificação "cega"
stats.porjogo_n<-data.frame(scale(stats.porjogo1))%>%
  mutate_at(c(1:ncol(stats.porjogo1)),~replace_na(.,0))

#Clusters - Optimal number
fviz_nbclust(stats.porjogo_n, FUN = kmeans, method = "gap_stat")
fviz_nbclust(NbClust(stats.porjogo_n,distance = "euclidean",min.nc = 2,max.nc = 10,
                     method = "complete"))+
  labs(title= "Número ótimo de Clusters - K=6") + 
  xlab("Número de Clusters - K") +
  ylab("Frequência em todos os métodos")
set.seed(123)
df.k3<-kmeans(stats.porjogo_n,centers=3,nstart = 10)
df.k4<-kmeans(stats.porjogo_n,centers=4,nstart = 10)
df.k5<-kmeans(stats.porjogo_n,centers=5,nstart = 10)
df.k6<-kmeans(stats.porjogo_n,centers=6,nstart = 10)
df.k7<-kmeans(stats.porjogo_n,centers=7,nstart = 10)
g1<-fviz_cluster(df.k5,geom = "point",data = stats.porjogo_n)+theme_bw()+ggtitle("K=5")
g2<-fviz_cluster(df.k6,geom = "point",data = stats.porjogo_n)+ggtitle("Clusterização")
g3<-fviz_cluster(df.k7,geom = "point",data = stats.porjogo_n)+ggtitle("K=7")
g4<-fviz_cluster(df.k4,geom = "point",data = stats.porjogo_n)+ggtitle("K=4")
g1
g2
g3
g4
fviz_cluster(df.k3,geom = "point",data = stats.porjogo_n)+ggtitle("K=3")
stats.porjogo1$cluster1<-df.k6$cluster

stats.porjogo1%>% 
  gather(Attributes, value, 1:14) %>% 
  ggplot(aes(x=value)) +
  geom_histogram(fill = "lightblue2", color = "black") + 
  facet_wrap(~Attributes, scales = "free_x") +
  labs(x = "Valor por jogo", y = "Frequência")
#Criando a 
a<-stats.porjogo1%>%group_by(cluster1)%>%
  summarise(across(c(2:14),~median(.x)))

b<-a%>%
  summarise(across(c(2:14),~max(.x)*1.1))
c<-a%>%
  summarise(across(c(2:14),~min(.x)*0))

abc<-b%>%bind_rows(c,a)
abc$cluster1<-as.character(abc$cluster1)
abc[1,14]<-"Max"
abc[2,14]<-"Min"
rownames(abc)<-abc$cluster1
abc2<-abc[,-14]


create_beautiful_radarchart <- 
  function(data, color = "#00AFBB",
                 vlabels = colnames(data), vlcex = 0.7,
                caxislabels = NULL, title = NULL, ...){
  radarchart(
    data, axistype = 1,
    # Customize the polygon
    pcol = color, pfcol = scales::alpha(color, 0.3), 
    plwd = 2, plty = 1,
    # Customize the grid
    cglcol = "grey", cglty = 1, cglwd = 0.8,
    # Customize the axis
    axislabcol = "grey", 
    # Variable labels
    vlcex = vlcex, vlabels = vlabels,
    caxislabels = caxislabels, title = title, ...
  )
}
# Define colors and titles
colors <- c("#00AFBB", "#E7B800"
            , "#FC4E07", "#00AB00","#0000FF","#FF0000")
titles <- c("Cluster.1", "Cluster.2", "Cluster.3",
            "Cluster.4","Cluster.5","Cluster.6")

#op <- par(mar = c(1, 1, 1, 1))
#par(mfrow = c(1,3))

# Create the radar chart
for(i in 1:6){
  create_beautiful_radarchart(
    data = abc2[c(1, 2, i+2), ],
    color = colors[i], title = titles[i]
  )
}
#par(op)

stats.porjogo1$Player<-rownames(stats.porjogo1)
analise<-stats.porjogo1%>%
inner_join(stats,by=c("Player"="Player_Team"))%>%
  select(Player,Pos,cluster1,Squad)%>%
  rename(
    Jogador=Player,
    Posicao=Pos,
    Cluster=cluster1,
    Equipe=Squad
  )


table(analise$Pos,analise$cluster)
stats.porjogo1%>%group_by(cluster1)%>%
  summarise(n())

abc%>%filter(cluster1!="Min" & cluster1!="Max")%>%rename(Cluster=cluster1)%>%
    kable()%>%kable_paper()
analise%>%group_by(Posicao,Cluster)%>%
  summarise("#Jogadores"=n())%>%kable()%>%kable_paper()
x<-c("Flamengo","Atlético Mineiro","Palmeiras","Fortaleza","Corinthians")
y<-c("Sport Recife","Chapecoense","Bahia","Grêmio","Juventude")
analise%>%
  filter(Equipe %in% x)%>%
  ggplot(aes(x=Equipe,group=Cluster,color=Cluster))+geom_bar()

  kable()%>%kable_paper()

camp<-read_xlsx("C:/Users/MorellGL/OneDrive - BASF/Documents/TCC/camp.xlsx")

analise3<-analise%>%group_by(Equipe,Cluster)%>%
  summarise(Total=n())%>%
  pivot_wider(names_from = Cluster,
              values_from = Total)%>%
  mutate_at(c(2:7),~replace_na(.,0))%>%
  inner_join(camp,by=c("Equipe"="Time"))%>%
  rename(
    C1="1",
    C2="2",
    C3="3",
    C4="4",
    C5="5",
    C6="6"
  )%>%scale()%>%data.frame()
  names(camp)
modelo1<-glm(Pontos~C1+C2+C3+C4+C5+C6,data=analise3,family = "poisson")
camp$`Gols Feitos`  
  
summary(modelo1)

summary(model3)  
  
stats.porjogo1%>%group_by(cluster1)%>%summarise(n=n())
model3<-train(`Gols Feitos`~C1+C2+C3+C4+C5+C6,data=analise3,
              method="glm")
plot(varImp(model3))

summary(stats.porjogo1)%>%kable()%>%kable_styling()




analise2<-analise%>%
  select(Jogador,Equipe,Posicao)%>%
  inner_join(stats.porjogo,by=c("Jogador"="Player_Team"))%>%
  select(-c("PK","G_PK",
            "PKatt","2CrdY","MP","OG","CrdR"))

a1<-analise2%>%group_by(Posicao)%>%
  summarise_if(.predicate = function(x) is.numeric(x),
               .funs = funs(.=median))%>%select(-Age_.)
  

b1<-a1%>%
  summarise(across(c(2:14),~max(.x)*1.1))
c1<-a1%>%
  summarise(across(c(2:14),~min(.x)*0))

abc.1<-b1%>%bind_rows(c1,a1)

abc.1[1,14]<-"Max"
abc.1[2,14]<-"Min"

abc2.1<-abc.1[,-14]
colors <- c("#00AFBB", "#E7B800"
            , "#FC4E07", "#00AB00","#0000FF","#FF0000","#00FF00")
titles <- c("DF", "DFMF", "FW","FWMF","MF","MFDF","MFFW")
            

for(i in 1:7){
  create_beautiful_radarchart(
    data = abc2.1[c(1, 2, i+2), ],
    color = colors[i], title = titles[i]
  )
}
clube<-analise%>%select(Squad,cluster1)%>%mutate(c=1)%>%
  group_by(Squad,cluster1)%>%summarise(c1=sum(c))%>%
  pivot_wider(names_from = cluster1,values_from = c1)%>%
  mutate_at(c(2:7),~replace_na(.,0))
